# -------------------------------------------------------------------------------------------------
# Задача №25. Решение в группах
# Напишите программу, которая принимает на вход строку, 
# и отслеживает, сколько раз каждый символ уже встречался.
# Количество повторов добавляется к символам с помощью постфикса формата _n.
# Input:    
# Output: a a_1 a_2 b c a_3 a_4 d c_1 d_1 d_2
# Для решения данной задачи используйте функцию .split()

# list_1 = "a a a b c a a d c d d".split( ) # split() разделяет элементы списка значением в скобках - тут пробелом
# print(list_1)
# word = {}
# for i in list_1:
#     if i not in word:
#         word[i] = 0 # тут мы получили значение буквы i в первый раз
#         print(i, end = " ") # если в принте написать end и указать азделяющий символ, 
#                             #то вывод будет в строку через этот символ
#     else: # в этот блок переходим, если значение i встречается нам более 1го раза
#         word[i] += 1
#         print(f'{i}_{word[i]}', end = " ")

# Практически везде разбиваем строку методом split() - получаем все данные строковые значения отдельными символами.
# И далее уже работаем с этими отдельными значениями.
# В итернете просто вбить "методы строки питон" - выдаст описание всех и что делают и с переменными показываются

# -------------------------------------------------------------------------------------------------
# Задача №27. Решение в группах
# Пользователь вводит текст(строка). 
# Словом считается последовательность непробельных символов, идущих подряд, 
# слова разделены одним или большим числом пробелов. 
# Определите, сколько различных слов содержится в этом тексте.
# Input: She sells sea shells on the sea shore The shells
# that she sells are sea shells I'm sure.So if she sells sea
# shells on the sea shore I'm sure that the shells are sea
# shore shells
# Output: 13

# list_1 = "She sells sea shells on the sea shore The shells\
# that she sells are sea shells I'm sure.So if she sells sea\
# shells on the sea shore I'm sure that the shells are sea\
# shore shells".replace(".", " ")

# list_1 = list_1.lower().split(" ") # перевели в нижний регистр и разбили на элементы строку
# print(f'Выводим спи{list_1}')
# # теперь нужно быстро убрать все дубли, оставить только уникальные значения:
# print(set(list_1))
# # Применяем метод len, чтобы посчитать кол-во уникальных элементов множества:
# print(len(set(list_1)))

# -------------------------------------------------------------------------------------------------
# Задача №29. Решение в группах
# Ваня и Петя поспорили, кто быстрее решит следующую задачу: 
# “Задана последовательность неотрицательных целых чисел. 
# Требуется определить значение наибольшего элемента последовательности, 
# которая завершается первым встретившимся нулем (число 0 не входит в последовательность)”. 
# Однако 2 друга оказались не такими смышлеными. 
# Никто из ребят не смог до конца сделать это задание. 
# Они решили так: у кого будет меньше ошибок в коде, тот и выиграл спор. 
# За помощью товарищи обратились к Вам, студентам.
# Примечание: Программные коды на следующих слайдах

# Ваня:
# n = int(input())
# max_number = 1000 # 1 ошибка: если ввести все значения посл-ти <1000, то максимум так и останется 1000
# while n != 0:
#     n = int(input())
#     if max_number > n: # 2 ошибка: сравниваем n с max_number, а не наоборот
#         max_number = n 
# print(max_number)

# # Петя:
# n = int(input())
# max_number = -1 # 1 ошибка: сначала в максимум ставим n, а не произвольное число
# while n < 0: # 2 ошибка: при таком условии цикл сразу остановится при любом числе 
#     n = int(input())
#     if max_number < n: 
#         n = max_number # 3 ошибка: нужно в макс записать значение n
# print(n)

# Ваня победил - сделал 2 ошибки, а не 3

# ОПТИМАЛЬНОЕ РЕШЕНИЕ:

# n = int(input("Введите последовательность чисел: "))
# max = n
# while n!=0:
#     n = int(input())
#     if n > max:
#         max = n
# print(f'Максимальное число в последовательности до нуля - это {max}')


