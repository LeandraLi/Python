# -------------------------------------------------------------------------------------------------
# Задача №31. Решение в группах
# Последовательностью Фибоначчи называется последовательность чисел a0, a1, ..., an, ..., 
# где a0 = 0, a1 = 1, ak = ak-1 + ak-2 (k > 1).
# Требуется найти N-е число Фибоначчи
# 
# Input: 7
# Output: 21
# Задание необходимо решать через рекурсию

# def recur(n, a, b, c):
#     if n == 1:
#         return a
#     c = a + b
#     a = b
#     b = c
#     return recur(n-1, a, b, c)

# n = int(input("Введите число: "))
# print(recur(n, 0, 1, 1))


# -------------------------------------------------------------------------------------------------
# Задача №33. Решение в группах
# Хакер Василий получил доступ к классному журналу 
# и хочет заменить все свои минимальные оценки на максимальные. 
# Напишите программу, которая заменяет оценки Василия, 
# но наоборот: все максимальные – на минимальные.
# 
# Input: 5 -> 1 3 3 3 4
# Output: 1 3 3 3 1

# n = int(input("Введите число элементов: "))
# list_1 = []
# for _ in range(n):
#     a = int(input())
#     list_1.append(a)
# max = list_1[0]
# min = list_1[0]
# for i in list_1:
#     if i > max:
#         max = i
#     if i < min:
#         min = i

# for i in range(len(list_1)):
#     if list_1[i] == max:
#         list_1[i] = min
# print(list_1)


# -------------------------------------------------------------------------------------------------
# Задача №35. Решение в группах
# Напишите функцию, которая принимает одно число и проверяет, # является ли оно простым
# Напоминание: Простое число - это число, которое имеет 2 делителя: 1 и n (само число)

# Input: 5
# Output: yes

# n = int(input("Введите число для проверки: "))

# for i in range (2, n-1):
#     if n % i == 0:
#         print("NO")
#         break
# else:
#     print("YES")


# -------------------------------------------------------------------------------------------------
# Пример с рекурсией:

# def abc(a):
#     if a == 0:
#         return
#     abc(a-1)
#     print(a)

# abc(4)

# Рекурсия хранит значения. Поэтому тут выводит их сразу в обратной последовательности с конца

# -------------------------------------------------------------------------------------------------
# Задача №37. Решение в группах
# Дано натуральное число N и последовательность из N элементов.
# Требуется вывести эту последовательность в обратном порядке.
# Примечание. 
# В программе запрещается объявлять массивы и использовать циклы
# (даже для ввода и вывода).

# Input: 2 -> 3 4
# Output: 4 3


def foo(n):
    k = input()
    if n == 0:
        return k
    return foo(n-1) + k

n = 5
print(foo(n))
