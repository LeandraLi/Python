# -------------------------------------------------------------------------------------------------
# Задача №39. Решение в группах
# Даны два массива чисел. 
# Требуется вывести те элементы первого массива (в том порядке, в каком они идут в первом массиве), 
# которых нет во втором массиве. 
# Пользователь вводит число N - количество элементов в первом массиве, 
# затем N чисел - элементы массива. 
# Затем число M - количество элементов во втором массиве. 
# Затем элементы второго массива.

# ПРИМЕР:
# Ввод:
# 7 
# 3 1 3 4 2 4 12
# 6
# 4 15 43 1 15 1 (каждое число вводится с новой строки)

# Вывод:
# 3 3 2 12

# n = int(input('Введите кол-во эл-в списка 1: '))
# # заполняем массив 1м способом - через цикл for и метож append:
# lst = [] # создаём новый массив
# for i in range(n): # запускаем цикл for, который работает n раз
#     a = int(input()) # вводим число а непосредственно в цикле
#     lst.append(a) # метод append добавляет число в конец списка lst (у нас цикл работает n раз)
# print(lst)

# или заполняем массив 2м способом - через list comprehension:
# lst1 = [int(input()) for i in range(n)]
# m = int(input('Введите кол-во эл-в списка 2: '))
# lst2 = [int(input()) for i in range(m)] # создаём и заполняем второй массив с m элементами
# print(lst1)
# print(lst2)

# lst3 = []
# for i in lst1:
#     if i not in lst2:
#         lst3.append(i)
# print(lst3)


# -------------------------------------------------------------------------------------------------
# Задача №41. Решение в группах
# Дан массив, состоящий из целых чисел. 
# Напишите программу, которая в данном массиве определит количество элементов, 
# у которых два соседних и, при этом, оба соседних элемента меньше данного. 
# Сначала вводится число N — количество элементов в массиве
# Далее записаны N чисел — элементы массива. 
# Массив состоит из целых чисел.

# ПРИМЕР 1:
# Ввод:
# 5
# 1 2 3 4 5
# Вывод:
# 0

# ПРИМЕР 2:
# Ввод:
# 5
# 1 5 1 5 1
# Вывод:
# 2

# (каждое число вводится с новой строки)

# n = int(input("Введите кол-во эл-в в массиве: "))
# list = [int(input()) for i in range(n)]
# print(list)

# count = 0
# for i in range(1, n-1):
#     if list[i] > list[i-1] and list[i] > list[i+1]:
#         count += 1
# print(f'Кол-во эл-в, удовлетворяюих условию задачи: {count}')


# -------------------------------------------------------------------------------------------------
# Задача №43. Решение в группах
# Дан список чисел. 
# Посчитайте, сколько в нем пар элементов, равных друг другу. 
# Считается, что любые два элемента, равные друг другу образуют одну пару, которую необходимо посчитать. 
# Вводится список чисел. 
# Все числа списка находятся на разных строках.

# ПРИМЕР:
# Ввод:
# 1 2 3 2 3 
# Вывод:
# 2

# Вариант решения 1 - простой
# a = [1, 2, 3, 2, 3, 2, 2]
# count = 0
# for i in range(len(a)):
#     for j in range(i+1, len(a)):
#         if a[i] == a[j]:
#             count += 1
# print(f"Кол-во пар элементов в заданном списке: {count}")


# Вариант решения 2 - сложнее, через словари
# a = [1, 2, 3, 2, 3, 2, 2] # словарь, в кот. ключом будут выступать элементы, а значением - то, сколько раз они повторялись
# dct = {}
# count = 0
# for i in a:
#     if i not in dct:
#         dct[i] = 1
#     else:
#         count += dct[i]
#         dct[i] += 1
# print(dct)
# print(count)

# -------------------------------------------------------------------------------------------------
# Задача №45. Решение в группах
# Два различных натуральных числа n и m называются дружественными, 
# если сумма делителей числа n (включая 1, но исключая само n) равна числу m и наоборот. 

# Например, 220 и 284 – дружественные числа.

# По данному числу k выведите все пары дружественных чисел, каждое из которых не превосходит k. 
# Программа получает на вход одно натуральное число k, не превосходящее 105. 
# Программа должна вывести все пары дружественных чисел, каждое из которых не превосходит k. 
# Пары необходимо выводить по одной в строке, разделяя пробелами. 
# Каждая пара должна быть выведена только один раз (перестановка чисел новую пару не дает).

# ПРИМЕР:
# Ввод: 
# 300

# Вывод:
# 220 284





